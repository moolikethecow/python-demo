version: 2.1

orbs: 
  python: circleci/python@2.0.3
  snyk: snyk/snyk@1.1.2
  docker: circleci/docker@2.0.3
  heroku: circleci/heroku@1.2.6

commands:
  set-build-env:
    description: "Set environment variables needed for building"
    steps:
      - checkout
      - run:
          name: Setup Build Environment Variables
          command: |
            echo "export VERSION=$(cat VERSION)" >> $BASH_ENV
            source $BASH_ENV
  
jobs:
  build:
    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    resource_class: medium
    steps:
      - set-build-env
      - docker/check
      - docker/build:
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          tag: ${VERSION}
          lint-dockerfile: true
          treat-warnings-as-errors: true
      - snyk/scan:
          docker-image-name: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:${VERSION}
      - docker/push:
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          tag: ${VERSION}
      
  test:
    working_directory: ~/circleci-demo
    docker:
      - image: cimg/node:current
    resource_class: small
    steps:
      - checkout
      - run: mkdir -p ./test-results/jest
      - run: npm install jest --save-dev
      - run: yarn add --dev jest-junit
      - run: npm test
      - store_test_results:
          path: ./test-results
  
  deploy-heroku:
    working_directory: ~/circleci-demo
    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    resource_class: medium
    steps:
      - set-build-env
      - heroku/install
      - heroku/check-authentication
      - heroku/push-docker-image:
         app-name: moo-python-demo
         process-types: web
      - heroku/release-docker-image:
         app-name: moo-python-demo
         process-types: web

  deploy-aws:
    working_directory: ~/circleci-demo
    docker:
      - image: cimg/base:2021.04
    resource_class: small
    steps:
      - add_ssh_keys:
          fingerprints:
            - "b1:28:4c:f7:e8:bc:60:0a:51:d5:7b:5d:cf:29:64:01"
      - run:
          name: Deploy to Homelab over SSH 
          command: |
            ssh -o StrictHostKeyChecking=no $AWS_SSH_USER@$AWS_SSH_HOST "docker container stop python-demo || docker container rm python-demo || docker pull moolikethecow/python-demo:${VERSION} && docker run -d -p 8000:8000 --name python-demo moolikethecow/python-demo:${VERSION}"
  
  deploy-gcp:
    working_directory: ~/circleci-demo
    docker:
      - image: cimg/base:2021.04
    resource_class: small
    steps:
      - checkout
      - run: sleep 50
      - run: echo "This is running in parallel with the deploy"
  
  deploy-homelab:
    working_directory: ~/circleci-demo
    docker:
      - image: cimg/base:2021.04
    resource_class: small
    steps:
      - add_ssh_keys:
          fingerprints:
            - "30:4f:cd:85:dd:7b:f1:29:b6:bf:fb:71:a3:bc:6b:f7"
      - run:
          name: Deploy to Homelab over SSH 
          command: |
            ssh -p $SSH_PORT -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "git -C /var/www/circleci/circlecinterview pull origin homelab-deploy"

workflows:
  build-test-deploy:
    jobs:
      - build
      - test
      - hold:
          type: approval
          requires: 
           - build
           - test

      - deploy-heroku:
          requires:
            - build
            - test
            - hold
      
      - deploy-aws:
          requires:
            - build
            - test
            - hold
      
      - deploy-gcp:
          requires:
            - build
            - test
            - hold
 
      - deploy-homelab:
          requires:
            - build
            - test
            - hold
          filters:
            branches:
              only: homelab-deploy
